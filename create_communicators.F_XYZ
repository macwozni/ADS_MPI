      subroutine create_communicators

      use communicators
      use parallelism

      implicit none

      include "mpif.h"

      integer :: group_comm_world
      integer :: iprint
      integer :: i1,i2,i3
      integer :: ip
      integer :: irank
      integer :: ierr
      integer :: comm_myrank_local

      iprint=0
      if(MYRANK.eq.4)iprint=1
      if(iprint==1)then
        write(*,*)MYRANK,'NRPROC',NRPROC
      endif
      call mpi_comm_group(MPI_COMM_WORLD,group_comm_world,i1)
      if ((i1)/=0) then
        write(*,*)MYRANK,':',
     .  'main: error calling mpi_comm_group!'
        call abort
      endif
      if(iprint.eq.1)then
        write(*,*)MYRANK,'got group',group_comm_world
      endif
      call mpi_barrier(MPI_COMM_WORLD,ierr)
c  ...get the integer coordinates of the processor in the 3D box
      call decompose(MYRANK,myrankx,myranky,myrankz)
c  ...create processors along X
      do ip=1,NRPROCX
        irank = (ip-1)+myranky*NRPROCX+
     .          myrankz*NRPROCX*NRPROCY
        processorsX(ip)=irank
      enddo
c  ...create processors along Y
      do ip=1,NRPROCY
        irank = myrankx+(ip-1)*NRPROCX+
     .          myrankz*NRPROCX*NRPROCY
        processorsY(ip)=irank
      enddo
c  ...create processors along Z
      do ip=1,NRPROCZ
        irank = myrankx+myranky*NRPROCX+
     .          (ip-1)*NRPROCX*NRPROCY
        processorsZ(ip)=irank
      enddo
      if(iprint.eq.1)then
        write(*,*)PRINTRANK,'processorsX',processorsX
        write(*,*)PRINTRANK,'processorsY',processorsY
        write(*,*)PRINTRANK,'processorsZ',processorsZ
      endif
c  ...create groups along X
      if(iprint.eq.1)then
        write(*,*)PRINTRANK,'call mpi_group_incl',
     .  group_comm_world,NRPROCX,
     .  processorsX,GROUPX
      endif
      call mpi_group_incl(group_comm_world,NRPROCX,
     .  processorsX,GROUPX,i2)
      if ((i2)/=0) then
         write(*,*)MYRANK,':',
     .     'main: error calling mpi_group_incl for X'
         call abort
      endif
      if(iprint.eq.1)then
        write(*,*)PRINTRANK,'returned',GROUPX,i2
      endif
c  ...create groups along Y
      if(iprint.eq.1)then
        write(*,*)PRINTRANK,'call mpi_group_incl',
     .  group_comm_world,NRPROCY,
     .  processorsY,GROUPY
      endif
      call mpi_group_incl(group_comm_world,NRPROCY,
     .  processorsY,GROUPY,i2)
      if ((i2)/=0) then
         write(*,*)MYRANK,':',
     .     'main: error calling mpi_group_incl for Y'
         call abort
      endif
      if(iprint.eq.1)then
        write(*,*)PRINTRANK,'returned',GROUPY,i2
      endif
c  ...create groups along Z
      if(iprint.eq.1)then
        write(*,*)PRINTRANK,'call mpi_group_incl',
     .  group_comm_world,NRPROCZ,
     .  processorsZ,GROUPZ
      endif
      call mpi_group_incl(group_comm_world,NRPROCZ,
     .  processorsZ,GROUPZ,i2)
      if ((i2)/=0) then
         write(*,*)MYRANK,':',
     .     'main: error calling mpi_group_incl for Z'
         call abort
      endif
      if(iprint.eq.1)then
        write(*,*)PRINTRANK,'returned',GROUPZ,i2
      endif
      call mpi_barrier(MPI_COMM_WORLD,ierr)
c  ...create the new communicator along X
      if(iprint.eq.1)then
        write(*,*)PRINTRANK,'call mpi_comm_create',
     .  MPI_COMM_WORLD,GROUPX
      endif
      call mpi_comm_create(MPI_COMM_WORLD,GROUPX,
     .   comm_myrank_local,i3)
      COMMX=comm_myrank_local
      if ((i3)/=0) then
        write(*,*)MYRANK,':',
     .      'main: error calling mpi_com_create for X'
        call abort
      endif
      if(iprint.eq.1)then  
        write(*,*)PRINTRANK,'comm_create returned',comm_myrank_local,i3
      endif
c  ...create the new communicator along Y
      if(iprint.eq.1)then
        write(*,*)PRINTRANK,'call mpi_comm_create',
     .  MPI_COMM_WORLD,GROUPY
      endif
      call mpi_comm_create(MPI_COMM_WORLD,GROUPY,
     .   comm_myrank_local,i3)
      COMMY=comm_myrank_local
      if ((i3)/=0) then
        write(*,*)MYRANK,':',
     .      'main: error calling mpi_com_create for Y'
        call abort
      endif
      if(iprint.eq.1)then
        write(*,*)PRINTRANK,'comm_create returned',comm_myrank_local,i3
      endif
c  ...create the new communicator along Z
      if(iprint.eq.1)then
        write(*,*)PRINTRANK,'call mpi_comm_create',
     .  MPI_COMM_WORLD,GROUPZ
      endif
      call mpi_comm_create(MPI_COMM_WORLD,GROUPZ,
     .   comm_myrank_local,i3)
      COMMZ=comm_myrank_local
      if ((i3)/=0) then
        write(*,*)MYRANK,':',
     .      'main: error calling mpi_com_create for Z'
        call abort
      endif
      if(iprint.eq.1)then
        write(*,*)PRINTRANK,'comm_create returned',comm_myrank_local,i3
      endif
      write(*,*)PRINTRANK,'COMMX(Y,Z)',COMMX,COMMY,COMMZ
      call mpi_barrier(MPI_COMM_WORLD,ierr)
      end
